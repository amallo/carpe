name: iOS CI/CD to TestFlight

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

  build-and-deploy:
    needs: test
    runs-on: macos-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: false

      - name: Install gems directly
        run: |
          gem install fastlane -v 2.217.0
          gem install cocoapods

      - name: Install iOS pods
        run: cd ios && pod install

      - name: Configure environment for production
        run: ./scripts/switch-env.sh prod

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4'

      - name: Debug Xcode SDKs
        run: |
          echo "Available iOS SDKs:"
          xcodebuild -showsdks | grep iOS
          echo ""
          echo "Xcode version:"
          xcodebuild -version
          echo ""
          echo "Available destinations:"
          xcodebuild -showdestinations -workspace ios/carpeApp.xcworkspace -scheme carpeApp

      - name: Import signing certificate (p12)
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_P12_PASSWORD }}

      - name: Install provisioning profile
        env:
          IOS_MOBILEPROVISION_BASE64: ${{ secrets.IOS_MOBILEPROVISION_BASE64 }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          # Robust base64 decode on macOS
          echo "$IOS_MOBILEPROVISION_BASE64" | openssl base64 -d -A -out ~/Library/MobileDevice/Provisioning\ Profiles/CarpeAppStoreConnect.mobileprovision

      - name: Debug certificates and profiles
        run: |
          echo "Available certificates:"
          security find-identity -v -p codesigning
          echo ""
          echo "Available provisioning profiles:"
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Debug Fastlane configuration
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          cd fastlane && fastlane debug_config
      
      - name: Build and upload to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          cd fastlane && fastlane beta 